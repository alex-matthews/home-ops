---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:

  talos:
    desc: Bootstrap the Talos cluster
    dir: '{{.TALHELPER_DIR}}'
    cmds:
      - '[ -f talsecret.sops.yaml ] || talhelper gensecret | sops --filename-override talos/talsecret.sops.yaml --encrypt /dev/stdin > talsecret.sops.yaml'
      - talhelper genconfig
      - talhelper gencommand apply --extra-flags="--insecure" | bash
      - until talhelper gencommand bootstrap | bash; do sleep 10; done
      - until talhelper gencommand kubeconfig --extra-flags="{{.ROOT_DIR}} --force" | bash; do sleep 10; done
    preconditions:
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - test -f {{.TALHELPER_DIR}}/talconfig.yaml
      - which talhelper sops

  apps:
    desc: Bootstrap apps into the Talos cluster
    cmds:
      - until kubectl wait --for=condition=Ready=False nodes --all --timeout=600s; do sleep 10; done
      - op run --env-file {{.KUBERNETES_DIR}}/bootstrap/apps/.secrets.env --no-masking -- minijinja-cli {{.KUBERNETES_DIR}}/bootstrap/apps/templates/resources.yaml.j2 | kubectl apply --server-side --filename -
      - helmfile --file {{.KUBERNETES_DIR}}/bootstrap/apps/helmfile.yaml apply --skip-diff-on-install --suppress-diff
      - for: ['prometheus-operator-crds', 'wipe-rook']
        cmd: helmfile --file {{.KUBERNETES_DIR}}/bootstrap/apps/helmfile.yaml destroy --selector name={{.ITEM}}
    env:
      NODE_COUNT:
        sh: talosctl config info --output json | jq --raw-output '.nodes | length'
    preconditions:
      - op user get --me
      - talosctl config info
      - test -f {{.KUBERNETES_DIR}}/bootstrap/apps/helmfile.yaml
      - test -f {{.KUBERNETES_DIR}}/bootstrap/apps/templates/resources.yaml.j2
      - test -f {{.KUBERNETES_DIR}}/bootstrap/apps/templates/wipe-rook.yaml.gotmpl
      - test -f {{.KUBECONFIG}}
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - which curl helmfile jq kubectl minijinja-cli op talosctl
