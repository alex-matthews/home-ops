---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Pre-pull Images"

on:
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  pre-job:
    name: Pre-pull Images Pre-Job
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: kubernetes/**

  extract-images:
    name: Extract Images
    needs: pre-job
    runs-on: ubuntu-latest
    if: ${{ needs.pre-job.outputs.any_changed == 'true' }}
    strategy:
      matrix:
        branches: ["default", "pull"]
      fail-fast: false
    outputs:
      default: ${{ steps.extract-images.outputs.default }}
      pull: ${{ steps.extract-images.outputs.pull }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "${{ matrix.branches == 'default' && github.event.repository.default_branch || '' }}"

      - name: Gather images
        uses: docker://ghcr.io/allenporter/flux-local:v7.2.0
        with:
          args: >-
            get cluster
            --all-namespaces
            --path /github/workspace/kubernetes/flux/cluster
            --enable-images
            --output yaml
            --output-file images.yaml

      - name: Extract images
        id: extract-images
        run: |
          images=$(yq --indent=0 --output-format=json \
              '[.. | .images? | select(. != null)] | flatten | sort | unique' images.yaml \
          )
          echo "${{ matrix.branches }}=${images}" >> $GITHUB_OUTPUT

  compare-images:
    name: Compare Images
    needs: ["pre-job", "extract-images"]
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.compare-images.outputs.images }}
    if: ${{ needs.pre-job.outputs.any_changed == 'true' }}
    steps:
      - name: Compare images
        id: compare-images
        run: |
          images=$(jq --compact-output --null-input \
              --argjson f1 '${{ needs.extract-images.outputs.default }}' \
              --argjson f2 '${{ needs.extract-images.outputs.pull }}' \
              '$f2 - $f1' \
          )
          echo "images=${images}" >> $GITHUB_OUTPUT

  pre-pull-images:
    name: Pre-pull Images
    needs: ["pre-job", "compare-images"]
    runs-on: home-ops-runner
    strategy:
      matrix:
        images: ${{ fromJSON(needs.compare-images.outputs.images) }}
      max-parallel: 4
      fail-fast: false
    if: ${{ needs.pre-job.outputs.any_changed == 'true' && needs.compare-images.outputs.images != '[]' }}
    steps:
      - name: Install talosctl
        run: curl -fsSL https://talos.dev/install | sh

      - name: Pre-pull image
        run: talosctl --nodes $NODE image pull ${{ matrix.images }}

  pre-pull-images-status:
    name: Pre-pull Images Success
    needs: pre-pull-images
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Any jobs failed?
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: All jobs passed or skipped?
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: echo "All jobs passed or skipped" && echo "${{ toJSON(needs.*.result) }}"
